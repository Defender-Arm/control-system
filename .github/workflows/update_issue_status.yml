name: Update Issue Status to "In Review"

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  update-issue-status:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      issues: write
      pull-requests: read
      projects: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Extract linked issue number
        id: extract_issue_number
        run: |
          echo "PR_BODY=${{ github.event.pull_request.body }}" >> $GITHUB_ENV
          ISSUE_NUMBER=$(echo ${{ github.event.pull_request.body }} | grep -oE '#[0-9]+' | head -n 1 | tr -d '#')
          echo "ISSUE_NUMBER=${ISSUE_NUMBER}" >> $GITHUB_ENV

      - name: Update project field to "In Review"
        if: env.ISSUE_NUMBER != ''
        uses: actions/github-script@v6
        with:
          script: |
            const issue_number = process.env.ISSUE_NUMBER;
            const { graphql } = require("@octokit/graphql");

            const query = `
              query($owner: String!, $repo: String!, $issue_number: Int!) {
                repository(owner: $owner, name: $repo) {
                  issue(number: $issue_number) {
                    id
                    projectCards(first: 1) {
                      nodes {
                        id
                        project {
                          id
                          name
                        }
                      }
                    }
                  }
                }
              }
            `;

            const variables = {
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: parseInt(issue_number),
            };

            const response = await graphql(query, {
              ...variables,
              headers: {
                authorization: `token ${{ secrets.GITHUB_TOKEN }}`,
              },
            });

            const projectCardId = response.repository.issue.projectCards.nodes[0].id;
            const fieldId = "98236657";
            const value = "In Review";

            const mutation = `
              mutation($projectCardId: ID!, $fieldId: ID!, $value: String!) {
                updateProjectCard(input: {id: $projectCardId, fieldValues: [{fieldId: $fieldId, value: $value}]}) {
                  projectCard {
                    id
                  }
                }
              }
            `;

            await graphql(mutation, {
              projectCardId,
              fieldId,
              value,
              headers: {
                authorization: `token ${{ secrets.GITHUB_TOKEN }}`,
              },
            });
